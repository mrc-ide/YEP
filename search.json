[{"path":"https://mrc-ide.github.io/YEP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keith Fraser. Author, maintainer.","code":""},{"path":"https://mrc-ide.github.io/YEP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fraser K (2023). YEP: Yellow Fever Epidemic Prediction. R package version 0.1.0, https://mrc-ide.github.io/YEP/.","code":"@Manual{,   title = {YEP: Yellow Fever Epidemic Prediction},   author = {Keith Fraser},   year = {2023},   note = {R package version 0.1.0},   url = {https://mrc-ide.github.io/YEP/}, }"},{"path":"https://mrc-ide.github.io/YEP/index.html","id":"yep---yellow-fever-epidemic-prevention","dir":"","previous_headings":"","what":"Yellow Fever Epidemic Prediction","title":"Yellow Fever Epidemic Prediction","text":"package running dynamic SEIRV model yellow fever, including generating sets annual epidemiological data (annual reported severe fatal case data, seroprevalence data). package can also used fit values epidemiological parameters model different types data yellow fever burden one regions. detailed overview purpose uses package, please read Introduction article (TBA). Additional packages (YellowFeverDynamics YEPaux) provide additional functions running alternative versions model carrying specialized tasks (YellowFeverDynamics) processing model output (YEPaux). packages currently construction/overhaul.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Case_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate_Case_Dataset — Generate_Case_Dataset","title":"Generate_Case_Dataset — Generate_Case_Dataset","text":"Generate annual case/death data","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Case_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate_Case_Dataset — Generate_Case_Dataset","text":"","code":"Generate_Case_Dataset(   input_data = list(),   FOI_values = c(),   R0_values = c(),   template = NULL,   vaccine_efficacy = 1,   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   p_rep_severe = 1,   p_rep_death = 1,   mode_start = 1,   start_SEIRV = NULL,   dt = 1,   n_reps = 1,   deterministic = FALSE,   mode_parallel = \"none\",   cluster = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Case_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate_Case_Dataset — Generate_Case_Dataset","text":"input_data List population vaccination data multiple regions FOI_values Values region force infection due spillover sylvatic reservoir R0_values Values region basic reproduction number human-human transmission template Annual reported case/death data comparison, region year, format . cases/. deaths vaccine_efficacy Fractional vaccine efficacy p_severe_inf Probability infection severe p_death_severe_inf Probability severe infection resulting death p_rep_severe Probability reporting severe non-fatal infection p_rep_death Probability reporting fatal infection mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input (list datasets, one per region) dt Time increment days use model (either 1.0 5.0 days) n_reps number stochastic repetitions deterministic TRUE/FALSE - set model run deterministic mode TRUE mode_parallel Set mode parallelization, : mode_parallel=\"none\", parallelization mode_parallel=\"pars_multi\", regions run parallel time period output type mode_parallel=\"clusterMap\", regions run parallel different time periods output types cluster Cluster threads use mode_parallel=\"clusterMap\" '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Case_Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate_Case_Dataset — Generate_Case_Dataset","text":"function used generate annual case/death data based template","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate_Dataset — Generate_Dataset","title":"Generate_Dataset — Generate_Dataset","text":"Generate annual serological /case/death data","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate_Dataset — Generate_Dataset","text":"","code":"Generate_Dataset(   input_data = list(),   FOI_values = c(),   R0_values = c(),   sero_template = NULL,   case_template = NULL,   vaccine_efficacy = 1,   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   p_rep_severe = 1,   p_rep_death = 1,   mode_start = 1,   start_SEIRV = NULL,   dt = 1,   n_reps = 1,   deterministic = FALSE,   mode_parallel = \"none\",   cluster = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate_Dataset — Generate_Dataset","text":"input_data List population vaccination data multiple regions FOI_values Vector values force infection due spillover sylvatic reservoir R0_values Vector values basic reproduction number human-human transmission sero_template Seroprevalence data template - data frame region, year, minimum/maximum age, vc_factor [TBA] number samples case_template Annual reported case/death data template - data frame region year vaccine_efficacy Fractional vaccine efficacy p_severe_inf Probability infection severe p_death_severe_inf Probability severe infection resulting death p_rep_severe Probability reporting severe non-fatal infection p_rep_death Probability reporting fatal infection mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input (list datasets, one per region) dt Time increment days use model (either 1.0, 2.5 5.0 days) n_reps number stochastic repetitions deterministic TRUE/FALSE - set model run deterministic mode TRUE mode_parallel Set mode parallelization, : mode_parallel=\"none\", parallelization mode_parallel=\"pars_multi\", regions run parallel time period output type mode_parallel=\"clusterMap\", regions run parallel different time periods output types cluster Cluster threads use mode_parallel=\"clusterMap\" '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate_Dataset — Generate_Dataset","text":"function used generate annual serological /case/death data based templates; normally used single_like_calc() function. separate Generate_Sero_dataset Generate_Case_Dataset functions can used one type required; function exists cover instances serological case data may need generated region. [TBA - Explanation breakdown regions model set lengths FOI_values R0_values]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Sero_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate_Sero_Dataset — Generate_Sero_Dataset","title":"Generate_Sero_Dataset — Generate_Sero_Dataset","text":"Generate serological dataset","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Sero_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate_Sero_Dataset — Generate_Sero_Dataset","text":"","code":"Generate_Sero_Dataset(   input_data = list(),   FOI_values = c(),   R0_values = c(),   template = NULL,   vaccine_efficacy = 1,   mode_start = 1,   start_SEIRV = NULL,   dt = 1,   n_reps = 1,   deterministic = FALSE,   mode_parallel = \"none\",   cluster = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Sero_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate_Sero_Dataset — Generate_Sero_Dataset","text":"input_data List population vaccination data multiple regions FOI_values Values region force infection due spillover sylvatic reservoir R0_values Values region basic reproduction number human-human transmission template Seroprevalence data comparison, region, year & age group, format . samples/. positives vaccine_efficacy Fractional vaccine efficacy mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input (list datasets, one per region) dt Time increment days use model (either 1.0 5.0 days) n_reps number stochastic repetitions deterministic TRUE/FALSE - set model run deterministic mode TRUE mode_parallel Set mode parallelization, : mode_parallel=\"none\", parallelization mode_parallel=\"pars_multi\", regions run parallel time period output type mode_parallel=\"clusterMap\", regions run parallel different time periods output types cluster Cluster threads use mode_parallel=\"clusterMap\" '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Sero_Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate_Sero_Dataset — Generate_Sero_Dataset","text":"function used generate serological, data multiple regions/parameter sets based   template.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_VIMC_Burden_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","title":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","text":"Generate annual burden data format used VIMC","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_VIMC_Burden_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","text":"","code":"Generate_VIMC_Burden_Dataset(   input_data = list(),   FOI_values = c(),   R0_values = c(),   template = NULL,   vaccine_efficacy = 1,   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   YLD_per_case = 0.006486,   mode_start = 1,   start_SEIRV = NULL,   dt = 1,   n_reps = 1,   deterministic = FALSE,   mode_parallel = \"none\",   cluster = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_VIMC_Burden_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","text":"input_data List population vaccination data multiple regions FOI_values Values region force infection due spillover sylvatic reservoir R0_values Values region basic reproduction number human-human transmission template Burden data VIMC format, regions, years, minimum maximum age, life expectancy line vaccine_efficacy Fractional vaccine efficacy p_severe_inf Probability infection severe p_death_severe_inf Probability severe infection resulting death YLD_per_case TBA mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input (list datasets, one per region) dt Time increment days use model (either 1.0 5.0 days) n_reps number stochastic repetitions deterministic TRUE/FALSE - set model run deterministic mode TRUE mode_parallel Set mode parallelization, : mode_parallel=\"none\", parallelization mode_parallel=\"pars_multi\", regions run parallel time period output type mode_parallel=\"clusterMap\", regions run parallel different time periods output types cluster Cluster threads use mode_parallel=\"clusterMap\" '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_VIMC_Burden_Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","text":"function used generate annual burden data format used Vaccine Impact   Modelling Consortium (VIMC) [TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC — MCMC","title":"MCMC — MCMC","text":"Combined MCMC Multi-Region - series MCMC steps one regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC — MCMC","text":"","code":"MCMC(   log_params_ini = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   filename_prefix = \"Chain\",   Niter = 1,   type = NULL,   log_params_min = c(),   log_params_max = c(),   mode_start = 0,   prior_type = \"zero\",   dt = 1,   n_reps = 1,   enviro_data = NULL,   R0_fixed_values = NULL,   vaccine_efficacy = NULL,   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   p_rep_severe = NULL,   p_rep_death = NULL,   m_FOI_Brazil = 1,   deterministic = FALSE,   mode_parallel = \"none\",   cluster = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC — MCMC","text":"log_params_ini Initial values parameters varied. always log() values actual parameters, ordered follows: 1) Parameters controlling value spillover force infection FOI, either ) number FOI values equal total number regions considered b) number environmental coefficients used calculate FOI values environmental covariates equal number environmental covariates listed enviro_data frame. Values alphabetical order region case () order columns environmental data frame case (b). 2) basic reproduction number human-human transmission R0 varied (.e. type set \"FOI+R0\" \"FOI+R0 enviro\"), parameters controlling value R0, either ) number R0 values equal total number regions considered b) number environmental coefficients used calculate R0 values environmental covariates equal number environmental covariates listed enviro_data frame. Values alphabetical order region case () order columns environmental data frame case (b). 3) Values additional parameters (vaccine efficacy vaccine_efficacy, severe case reporting probability p_rep_severe fatal case reporting probability p_rep_death) varied, order vaccine_efficacy->p_rep_severe->p_rep_death. parameters varied, values separately supplied function (see ) set NULL, default. input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths filename_prefix Prefix names output files Niter Total number steps run type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" log_params_min Lower limits varied parameter values specified log_params_max Upper limits varied parameter values specified mode_start Flag indicating set initial population immunity level addition vaccination mode_start = 0, vaccinated individuals mode_start = 1, shift non-vaccinated individuals recovered give herd immunity prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values dt time increment days (must 1 5) n_reps Number times repeat calculations get average likelihood step enviro_data Data frame containing values environmental covariates; set NULL use R0_fixed_values Values R0 use FOI subject fitting (.e. type set \"FOI\" \"FOI enviro\"); set NULL use vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_severe_inf Probability infection severe p_death_severe_inf Probability severe infection resulting death p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter) m_FOI_Brazil Multiplier spillover FOI Brazil regions (set NULL varied parameter) deterministic TRUE/FALSE - set model run deterministic mode TRUE mode_parallel Set mode parallelization, : mode_parallel=\"none\", parallelization mode_parallel=\"pars_multi\", regions run parallel time period output type mode_parallel=\"clusterMap\", regions run parallel different time periods output types cluster Cluster threads use mode_parallel=\"clusterMap\" '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC — MCMC","text":"master function running Markov chain optimize parameters yellow fever model based calculated likelihood observing supplied data given particular set parameters.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC_step.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC_step — MCMC_step","title":"MCMC_step — MCMC_step","text":"Single MCMC step - one regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC_step — MCMC_step","text":"","code":"MCMC_step(   log_params = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   chain_cov = 1,   adapt = 0,   like_current = -Inf,   consts = list() )"},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC_step — MCMC_step","text":"log_params Varied parameters (log values actual parameters) input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths chain_cov = Chain covariance adapt = 0/1 flag indicating type calculation use proposition value like_current = Current accepted likelihood value consts = List constant parameters/flags/etc. loaded mcmc() (type,log_params_min,log_params_max, mode_start,prior_type,dt,n_reps,enviro_data,R0_fixed_values,vaccine_efficacy,p_severe_inf,p_death_severe_inf, p_rep_severe,p_rep_death,m_FOI_Brazil,deterministic, mode_parallel, cluster)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC_step.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC_step — MCMC_step","text":"function runs single step Markov chain set using function mcmc(). proposes set parameters using param_prop_setup() function, calculates likelihood observing observed data based proposed parameter set, accepts rejects proposed parameter set based calculated likelihood existing chain information, returns next line information chain mcmc().","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Model_Run — Model_Run","title":"Model_Run — Model_Run","text":"Run SEIRV model single region (Model_Run_Multi_Input can used run multiple regions parallel)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model_Run — Model_Run","text":"","code":"Model_Run(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   years_data = c(1940:1941),   start_SEIRV = list(),   output_type = \"full\",   year0 = 1940,   mode_start = 0,   vaccine_efficacy = 1,   dt = 1,   n_particles = 1,   n_threads = 1,   deterministic = FALSE )"},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model_Run — Model_Run","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Basic reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year years_data Incremental vector years denoting years save data start_SEIRV SEIRV data end previous run use input output_type Type data output: \"full\" = SEIRVC + FOI steps ages \"case\" = annual total new infections (C) summed across ages \"sero\" = annual SEIRV summed across ages \"case+sero\" = annual SEIRVC summed across ages \"case_alt\" = annual total new infections combined age year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) vaccine_efficacy Proportional vaccine efficacy dt Time increment days use model (1.0, 2.5 5.0 days) n_particles number particles use n_threads number threads use deterministic TRUE/FALSE - set model run deterministic mode TRUE '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model_Run — Model_Run","text":"Accepts epidemiological + population parameters model settings; runs SEIRV model one region specified time period number particles/threads outputs time-dependent SEIRV values, infection numbers /total force infection values.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Many_Reps.html","id":null,"dir":"Reference","previous_headings":"","what":"Model_Run_Many_Reps — Model_Run_Many_Reps","title":"Model_Run_Many_Reps — Model_Run_Many_Reps","text":"Run SEIRV model single region large number repetitions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Many_Reps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model_Run_Many_Reps — Model_Run_Many_Reps","text":"","code":"Model_Run_Many_Reps(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   years_data = c(1940:1941),   start_SEIRV = list(),   output_type = \"full\",   year0 = 1940,   mode_start = 0,   vaccine_efficacy = 1,   dt = 1,   n_reps = 1,   division = 10 )"},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Many_Reps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model_Run_Many_Reps — Model_Run_Many_Reps","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Basic reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year years_data Incremental vector years denoting years save data start_SEIRV SEIRV data end previous run use input output_type Type data output: \"full\" = SEIRVC + FOI steps ages \"case\" = annual total new infections (C) summed across ages \"sero\" = annual SEIRV summed across ages \"case+sero\" = annual SEIRVC summed across ages \"case_alt\" = annual total new infections combined age year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) vaccine_efficacy Proportional vaccine efficacy dt Time increment days use model (1.0, 2.5 5.0 days) n_reps Number repetitions (used set number particles threads) division Number particles run one go (20) '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Many_Reps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model_Run_Many_Reps — Model_Run_Many_Reps","text":"Accepts epidemiological + population parameters model settings; runs SEIRV model one region specified time period number repetitions outputs time-dependent SEIRV values, infection numbers /total force infection values. Variation Model_Run() used running large number repetitions (>20).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Multi_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Model_Run_Multi_Input — Model_Run_Multi_Input","title":"Model_Run_Multi_Input — Model_Run_Multi_Input","text":"Run SEIRV model multiple parameter sets","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Multi_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model_Run_Multi_Input — Model_Run_Multi_Input","text":"","code":"Model_Run_Multi_Input(   FOI_spillover = c(),   R0 = c(),   vacc_data = list(),   pop_data = list(),   years_data = c(1940:1941),   start_SEIRV = list(),   output_type = \"full\",   year0 = 1940,   mode_start = 0,   vaccine_efficacy = 1,   dt = 1,   n_particles = 1,   n_threads = 1,   deterministic = FALSE )"},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Multi_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model_Run_Multi_Input — Model_Run_Multi_Input","text":"FOI_spillover Vector values force infection due spillover sylvatic reservoir R0 Vector values basic reproduction number urban spread infection vacc_data Vaccination coverage parameter set age group year pop_data Population parameter set age group year years_data Incremental vector years denoting years save data start_SEIRV SEIRV data end previous run use input, parameter set output_type Type data output: \"full\" = SEIRVC, \"case\" = C , \"sero\" = SEIRV year0 First year population/vaccination data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) vaccine_efficacy Proportional vaccine efficacy dt Time increment days use model (1.0, 2.5 5.0 days) n_particles number particles use (20) n_threads number threads use deterministic TRUE/FALSE - set model run deterministic mode TRUE '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Multi_Input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model_Run_Multi_Input — Model_Run_Multi_Input","text":"Accepts epidemiological + population parameters model settings; runs SEIRV model multiple parameter sets (spillover FOI, R0, population vaccination data, starting data values relevant) specified time period number particles/threads outputs time-dependent SEIRV values, infection numbers /total force infection values. Parameter sets may represent multiple regions /region different inputs.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/cases_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"cases_compare — cases_compare","title":"cases_compare — cases_compare","text":"Compare modelled observed severe cases using negative binomial","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/cases_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cases_compare — cases_compare","text":"","code":"cases_compare(model_data = list(), obs_data = list())"},{"path":"https://mrc-ide.github.io/YEP/reference/cases_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cases_compare — cases_compare","text":"model_data Modelled data data frame format (list years number reported severe cases ) obs_data Data frame containing annual observed case data '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/cases_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cases_compare — cases_compare","text":"Compares modelled data severe cases per year compared observed data, calculating logarithmic likelihood observing latter given former, using negative binomial formula.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"create_input_data — create_input_data","title":"create_input_data — create_input_data","text":"Creates input data set correct format use functions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_input_data — create_input_data","text":"","code":"create_input_data(   vacc_data = list(),   pop_data = list(),   regions = c(),   years = c() )"},{"path":"https://mrc-ide.github.io/YEP/reference/create_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_input_data — create_input_data","text":"vacc_data Data frame containing vaccination coverage data region column 1, year column 2 coverage values age remaining columns pop_data Data frame containing population data region column 1, year column 2 population values age remaining columns regions Vector regions extract data vacc_data pop_data (alphabetical order) years Vector years extract data vacc_data pop_data '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_input_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create_input_data — create_input_data","text":"Takes vaccination population data data frames (columns age columns showing region   year row), extracts number age groups (verifying data frame),   extracts data specified regions years, creates list format used functions (vectors   region names, years age groups, 3-dimensional arrays vaccination population data).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_param_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"create_param_labels — create_param_labels","title":"create_param_labels — create_param_labels","text":"Apply names parameters set used data matching parameter fitting","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_param_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_param_labels — create_param_labels","text":"","code":"create_param_labels(   type = \"FOI\",   input_data = list(),   enviro_data = NULL,   extra_params = c(\"vacc_eff\") )"},{"path":"https://mrc-ide.github.io/YEP/reference/create_param_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_param_labels — create_param_labels","text":"type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) enviro_data Environmental data frame, containing relevant environmental variables extra_params Vector strings listing parameters besides ones determining FOI/R0 (may include vaccine efficacy /infection/death reporting probabilities)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_param_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create_param_labels — create_param_labels","text":"Takes input list environmental data along names additional parameters (vaccine efficacy reporting probabilities) generates list names parameter set use input fitting functions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/deaths_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"deaths_compare — deaths_compare","title":"deaths_compare — deaths_compare","text":"Compare modelled observed deaths using negative binomial","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/deaths_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deaths_compare — deaths_compare","text":"","code":"deaths_compare(model_data = list(), obs_data = list())"},{"path":"https://mrc-ide.github.io/YEP/reference/deaths_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deaths_compare — deaths_compare","text":"model_data Modelled data data frame format (list years number reported deaths ) obs_data Data frame containing observed death data '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/deaths_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"deaths_compare — deaths_compare","text":"Compares modelled data fatal cases per year compared observed data, calculating logarithmic likelihood observing latter given former, using negative binomial formula.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_check.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_check — input_data_check","title":"input_data_check — input_data_check","text":"Check input data correctly formatted","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_check — input_data_check","text":"","code":"input_data_check(input_data = list())"},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_check — input_data_check","text":"input_data List population vaccination data multiple regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_check — input_data_check","text":"function takes list input data use functions checks correctly   formatted, including containing necessary elements years ages sequence","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_process.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_process — input_data_process","title":"input_data_process — input_data_process","text":"Cross-reference input data serological /annual case/death data comparison","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_process — input_data_process","text":"","code":"input_data_process(   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_process — input_data_process","text":"input_data List population vaccination data multiple regions (created using create_input_data() function usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_process — input_data_process","text":"function, used prepare input data functions used calculate likelihood observed data,   amends list population vaccination data used input functions,   cross-referencing seroprevalence /case data adding connection information.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_truncate.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_truncate — input_data_truncate","title":"input_data_truncate — input_data_truncate","text":"Truncate input data list shorter set regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_truncate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_truncate — input_data_truncate","text":"","code":"input_data_truncate(input_data = list(), regions_new = c())"},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_truncate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_truncate — input_data_truncate","text":"input_data List population vaccination data multiple regions (created using create_input_data() function usually loaded RDS file) regions_new Vector regions (subset input_data$region_labels) create new, shorter dataset","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_truncate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_truncate — input_data_truncate","text":"TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_FOI_R0_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","title":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","text":"Set FOI R0 values calculate prior probability values MCMC calculation","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_FOI_R0_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","text":"","code":"mcmc_FOI_R0_setup(   type = \"\",   prior_type = \"\",   regions = \"\",   log_params_prop = c(),   enviro_data = list(),   R0_fixed_values = c(),   log_params_min = c(),   log_params_max = c() )"},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_FOI_R0_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","text":"type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values regions Vector region names log_params_prop Proposed values varied parameters (natural logarithm actual parameters) enviro_data Environmental data frame, containing relevant environmental variables R0_fixed_values Values R0 use varied log_params_min Lower limits varied parameter values specified log_params_max Upper limits varied parameter values specified '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_FOI_R0_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_FOI_R0_setup — mcmc_FOI_R0_setup","text":"Takes parameter values used Markov Chain Monte Carlo fitting, calculates spillover force infection (optionally) reproduction number values either directly environmental covariates. Also calculates related components prior probability.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_checks — mcmc_checks","title":"mcmc_checks — mcmc_checks","text":"Perform checks MCMC inputs","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_checks — mcmc_checks","text":"","code":"mcmc_checks(   log_params_ini = c(),   n_regions = 1,   type = NULL,   log_params_min = c(),   log_params_max = c(),   prior_type = NULL,   enviro_data = NULL,   R0_fixed_values = NULL,   vaccine_efficacy = NULL,   p_rep_severe = NULL,   p_rep_death = NULL,   m_FOI_Brazil = 1 )"},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_checks — mcmc_checks","text":"log_params_ini Initial values varied parameters (natural logarithm actual parameters) n_regions Number regions type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" log_params_min Lower limits varied parameter values specified log_params_max Upper limits varied parameter values specified prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values enviro_data Values environmental covariates (use) R0_fixed_values Values R0 use varied (set NULL R0 varied) vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter) m_FOI_Brazil FOI multiplier Brazil regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_checks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_checks — mcmc_checks","text":"function, called MCMC(), performs number checks data used fitting ensure proper functionality. verifies number parameters varied consistent settings certain values outwith sensible boundaries (e.g. probabilities must 0 1).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_prelim_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_prelim_fit — mcmc_prelim_fit","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"Test multiple sets parameters randomly drawn range maximum minimum values order find approximate values giving maximum likelihood","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_prelim_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"","code":"mcmc_prelim_fit(   n_iterations = 1,   n_param_sets = 1,   n_bounds = 1,   type = NULL,   log_params_min = NULL,   log_params_max = NULL,   input_data = list(),   obs_sero_data = list(),   obs_case_data = list(),   mode_start = 0,   prior_type = \"zero\",   dt = 1,   n_reps = 1,   enviro_data = NULL,   R0_fixed_values = c(),   vaccine_efficacy = NULL,   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   p_rep_severe = NULL,   p_rep_death = NULL,   m_FOI_Brazil = 1,   deterministic = TRUE,   mode_parallel = \"none\",   cluster = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_prelim_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"n_iterations = Number times run adjust maximum/minimum n_param_sets = Number parameter sets run iteration n_bounds = Number parameter sets (highest likelihood values) take iteration create new maximum/minimum values type Type parameter set (FOI , FOI+R0, FOI /R0 coefficients associated environmental covariates); choose \"FOI\",\"FOI+R0\",\"FOI enviro\",\"FOI+R0 enviro\" log_params_min Initial lower limits varied parameter values (natural logarithm actual limits) log_params_max Initial upper limits varied parameter values (natural logarithm actual limits) input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths mode_start Flag indicating set initial population immunity level addition vaccination mode_start = 0, vaccinated individuals mode_start = 1, shift non-vaccinated individuals recovered give herd immunity prior_type Text indicating type calculation use prior probability prior_type = \"zero\", prior probability always zero prior_type = \"flat\", prior probability zero FOI/R0 designated ranges, -Inf otherwise prior_type = \"exp\", prior probability given dexp calculation FOI/R0 values prior_type = \"norm\", prior probability given dnorm calculation parameter values dt time increment days (must 1 5) n_reps Number repetitions enviro_data Values environmental variables (use) R0_fixed_values Values R0 use varied vaccine_efficacy Vaccine efficacy (set NULL varied parameter) p_severe_inf TBA p_death_severe_inf TBA p_rep_severe Probability observation severe infection (set NULL varied parameter) p_rep_death Probability observation death (set NULL varied parameter) m_FOI_Brazil Multiplier FOI Brazil regions deterministic TBA mode_parallel TBA cluster Cluster threads use multithreading used; set NULL otherwise '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_prelim_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"function used estimate model parameter values giving maximum likelihood; primarily intended used generate initial parameter values Markov Chain Monte Carlo fitting (using mcmc() function).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_calc_enviro.html","id":null,"dir":"Reference","previous_headings":"","what":"param_calc_enviro — param_calc_enviro","title":"param_calc_enviro — param_calc_enviro","text":"Parameter calculation environmental covariates","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_calc_enviro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"param_calc_enviro — param_calc_enviro","text":"","code":"param_calc_enviro(enviro_coeffs = c(), enviro_covar_values = c())"},{"path":"https://mrc-ide.github.io/YEP/reference/param_calc_enviro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"param_calc_enviro — param_calc_enviro","text":"enviro_coeffs Values environmental coefficients enviro_covar_values Values environmental covariates '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_calc_enviro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"param_calc_enviro — param_calc_enviro","text":"Takes set coefficients environmental covariates covariate values calculates values   spillover force infection reproduction number.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_prop_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"param_prop_setup — param_prop_setup","title":"param_prop_setup — param_prop_setup","text":"Set proposed new log parameter values next step chain","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_prop_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"param_prop_setup — param_prop_setup","text":"","code":"param_prop_setup(log_params = c(), chain_cov = 1, adapt = 0)"},{"path":"https://mrc-ide.github.io/YEP/reference/param_prop_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"param_prop_setup — param_prop_setup","text":"log_params Previous log parameter values used input chain_cov Covariance calculated previous steps chain adapt 0/1 flag indicating type calculation use proposition value '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_prop_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"param_prop_setup — param_prop_setup","text":"Takes current values parameter set used Markov Chain Monte Carlo fitting proposes new values multivariate normal distribution existing values form mean standard deviation based chain covariance (flag \"adapt\" set 1) flat value based number parameters.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/parameter_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter setup — parameter_setup","title":"Parameter setup — parameter_setup","text":"Set parameters input model","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/parameter_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter setup — parameter_setup","text":"","code":"parameter_setup(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   year0 = 1940,   years_data = c(1941:1942),   mode_start = 0,   vaccine_efficacy = 1,   start_SEIRV = list(),   dt = 1 )"},{"path":"https://mrc-ide.github.io/YEP/reference/parameter_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter setup — parameter_setup","text":"FOI_spillover Force infection due spillover sylvatic reservoir R0 Reproduction number urban spread infection vacc_data Vaccination coverage age group year pop_data Population age group year year0 First year population/vaccination data years_data Incremental vector years denoting years save data mode_start Flag indicating set initial population immunity level addition vaccination mode_start=0, vaccinated individuals mode_start=1, shift non-vaccinated individuals recovered give herd immunity mode_start=2, use SEIRV input list previous run(s) vaccine_efficacy Proportional vaccine efficacy start_SEIRV SEIRV data end previous run use input dt Time increment days use model (either 1.0 5.0 days) '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/parameter_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter setup — parameter_setup","text":"Takes multiple inputs, outputs list use odin SEIRV model.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/regions_breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"regions_breakdown — regions_breakdown","title":"regions_breakdown — regions_breakdown","text":"Break regions datasets get list unique regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/regions_breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"regions_breakdown — regions_breakdown","text":"","code":"regions_breakdown(region_labels = c())"},{"path":"https://mrc-ide.github.io/YEP/reference/regions_breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"regions_breakdown — regions_breakdown","text":"region_labels Vector region labels","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/regions_breakdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"regions_breakdown — regions_breakdown","text":"Takes vector region labels, potentially including labels contain one region (e.g.   labels countrywide data adm1 level regions one label separated comma) produces alphabetically   ordered list region labels, breaking comma-separated groups. example, supplying vector labels \"BRA.1_1,BRA.2_1,BRA.3_1\" return vector length 3   - c(\"BRA.1_1\",\"BRA.2_1\",\"BRA.3_1\").","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_calculate — sero_calculate","title":"sero_calculate — sero_calculate","text":"Calculate seroprevalence unvaccinated people modelled data one years one age range","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_calculate — sero_calculate","text":"","code":"sero_calculate(   age_min = 0,   age_max = 101,   years = NULL,   vc_factor = 0,   data = list(),   n_p = 1 )"},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_calculate — sero_calculate","text":"age_min = Minimum age age group age_max = Maximum age age group years = Years calculate average annual seroprevalence vc_factor = Proportion patients tested vaccine status unknown data = Output Basic_Model_Run Full_Model_Run n_p = Particle select data '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_calculate — sero_calculate","text":"Takes information minimum maximum ages desired range, year(s) calculate seroprevalence, factor representing proportion patients unknown vaccine status, SEIRV model output data, calculates seroprevalence unvaccinated people specified age range specified year(s).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate2.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_calculate2 — sero_calculate2","title":"sero_calculate2 — sero_calculate2","text":"Calculate number \"samples\" number \"positives\" modelled data specified age range(s) year(s)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_calculate2 — sero_calculate2","text":"","code":"sero_calculate2(sero_data = list(), model_data = list(), n_p = 1)"},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_calculate2 — sero_calculate2","text":"sero_data = Data frame containing years, minimum maximum ages, values vc_factor (proportion people vaccination status unknown) model_data = Output Basic_Model_Run Full_Model_Run n_p = Particle select model_data '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_calculate2 — sero_calculate2","text":"Takes information minimum maximum ages desired range(s), year(s) calculate number \"samples\" (people eligible testing) \"positives\" (people test positive), plus vc_factor (proportion people vaccination status unknown)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_compare — sero_compare","title":"sero_compare — sero_compare","text":"Take model results, calculate seroprevalence comparison observed seroprevalence calculate likelihood (single region, multiple years/age ranges)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_compare — sero_compare","text":"","code":"sero_compare(model_data = list(), obs_sero_data = list())"},{"path":"https://mrc-ide.github.io/YEP/reference/sero_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_compare — sero_compare","text":"model_data = Output Model_Run obs_sero_data = Seroprevalence data comparison, year age group, format   . samples/. positives '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_compare — sero_compare","text":"Takes SEIRV model output data observed seroprevalence data, calculates seroprevalence modelled data, compares modelled observed data, calculating logarithmic likelihood observing latter given former, using binomial formula.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/single_like_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"single_like_calc — single_like_calc","title":"single_like_calc — single_like_calc","text":"Function calculates outputs likelihood observing simulated data","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/single_like_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"single_like_calc — single_like_calc","text":"","code":"single_like_calc(   log_params_prop = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   consts = list() )"},{"path":"https://mrc-ide.github.io/YEP/reference/single_like_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"single_like_calc — single_like_calc","text":"log_params_prop Proposed values varied parameters (natural logarithm actual parameters) input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file), cross-reference tables added using input_data_process2 MCMC2 obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths consts = List constant parameters/flags/etc. loaded mcmc() (type,log_params_min,log_params_max, mode_start,prior_type,dt,n_reps,enviro_data,R0_fixed_values,vaccine_efficacy,p_severe_inf,p_death_severe_inf, p_rep_severe,p_rep_death,m_FOI_Brazil,deterministic, mode_parallel, cluster)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/single_like_calc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"single_like_calc — single_like_calc","text":"function calculates total likelihood observing set observations (across multiple regions data types) given proposed parameter set.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/template_region_xref.html","id":null,"dir":"Reference","previous_headings":"","what":"template_region_xref — template_region_xref","title":"template_region_xref — template_region_xref","text":"[TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/template_region_xref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"template_region_xref — template_region_xref","text":"","code":"template_region_xref(template = list(), regions = c())"},{"path":"https://mrc-ide.github.io/YEP/reference/template_region_xref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"template_region_xref — template_region_xref","text":"template [TBA] regions [TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/template_region_xref.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"template_region_xref — template_region_xref","text":"[TBA]","code":""}]
