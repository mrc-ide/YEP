[{"path":"https://mrc-ide.github.io/YEP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keith Fraser. Author, maintainer.","code":""},{"path":"https://mrc-ide.github.io/YEP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fraser K (2025). YEP: Yellow Fever Epidemic Prediction. R package version 0.2.0, https://mrc-ide.github.io/YEP/.","code":"@Manual{,   title = {YEP: Yellow Fever Epidemic Prediction},   author = {Keith Fraser},   year = {2025},   note = {R package version 0.2.0},   url = {https://mrc-ide.github.io/YEP/}, }"},{"path":"https://mrc-ide.github.io/YEP/index.html","id":"yep---yellow-fever-epidemic-prevention","dir":"","previous_headings":"","what":"Yellow Fever Epidemic Prediction","title":"Yellow Fever Epidemic Prediction","text":"package running dynamic SEIRV model yellow fever, creating input data processing output data. package can also used : -Generate datasets based existing yellow fever epidemiological datasets (annual reported case data seroprevalence survey results). -Estimate values epidemiological parameters model parameters including vaccine efficacy case reporting rates, based epidemiological data yellow fever burden one regions. -Generate yellow fever burden data multiple countries based approach used Vaccine Impact Modelling Consortium. Additional packages use package: YEPaux: Auxiliary functions processing model output parameter estimation results YellowFeverDynamics: Alternate versions basic model additional functions outbreak risk estimation response modelling","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate_Dataset — Generate_Dataset","title":"Generate_Dataset — Generate_Dataset","text":"Generate annual serological /case/death data","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate_Dataset — Generate_Dataset","text":"","code":"Generate_Dataset(   FOI_values = c(),   R0_values = c(),   input_data = list(),   sero_template = NULL,   case_template = NULL,   vaccine_efficacy = 1,   time_inc = 1,   mode_start = 1,   start_SEIRV = NULL,   mode_time = 0,   n_reps = 1,   deterministic = FALSE,   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   p_rep_severe = 1,   p_rep_death = 1,   mode_parallel = FALSE,   cluster = NULL,   output_frame = FALSE,   seed = NULL,   xref_sero = NULL,   xref_case = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate_Dataset — Generate_Dataset","text":"FOI_values Array values force infection due spillover sylvatic reservoir region + time point R0_values Array values basic reproduction number human-human transmission region time point input_data List population vaccination data multiple regions standard format [TBA] sero_template Seroprevalence data template - data frame region, year, minimum/maximum age, vc_factor [TBA] number samples case_template Annual reported case/death data template - data frame region year vaccine_efficacy Fractional vaccine efficacy time_inc Time increment days use model (either 1.0, 2.5 5.0 days) mode_start Flag indicating set initial population immunity level addition vaccination  mode_start = 0, vaccinated individuals  mode_start = 1, shift non-vaccinated individuals recovered give herd immunity (stratified age)  mode_start = 2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input (list datasets, one per region) mode_time Type time dependence FOI_spillover R0 used:  mode_time = 0, time variation (constant values) mode_time = 1, FOI/R0 vary annually without seasonality (number values = number years consider)  mode_time = 2, FOI/R0 vary monthly seasonality without inter-annual variation (number values = 12)  mode_time = 3, FOI/R0 vary daily seasonality without inter-annual variation (number values = 365/dt)  mode_time = 4, FOI/R0 vary annually monthly seasonality (number values = 12*number years consider)  mode_time = 5, FOI/R0 vary annually daily seasonality (number values = (365/dt)*number years consider) n_reps number stochastic repetitions deterministic TRUE/FALSE - set model run deterministic mode TRUE p_severe_inf Probability infection severe p_death_severe_inf Probability severe infection resulting death p_rep_severe Probability reporting severe non-fatal infection p_rep_death Probability reporting fatal infection mode_parallel TRUE/FALSE - set model run parallel using cluster TRUE cluster Cluster threads use mode_parallel = TRUE output_frame TRUE/FALSE - indicate whether output complete data frame results template format (TRUE) calculated values (FALSE) seed Optional random seed value set running region stochastic normalization; set NULL omit; work mode_parallel set FALSE. xref_sero Region cross-referencing data generated template_region_xref() function serological template; set NULL, calculated within function xref_case Region cross-referencing data generated template_region_xref() function case template;  set NULL, calculated within function '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate_Dataset — Generate_Dataset","text":"function used generate annual serological /case/death data based templates; normally used single_posterior_calc() function. [TBA - Explanation breakdown regions model set lengths FOI_values R0_values]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_VIMC_Burden_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","title":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","text":"Generate annual burden data format used VIMC","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_VIMC_Burden_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","text":"","code":"Generate_VIMC_Burden_Dataset(   FOI_values = c(),   R0_values = c(),   input_data = list(),   template = NULL,   vaccine_efficacy = 1,   time_inc = 1,   mode_start = 1,   start_SEIRV = NULL,   mode_time = 0,   n_reps = 1,   deterministic = FALSE,   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   p_rep_severe = 1,   p_rep_death = 1,   YLD_per_case = 0.006486,   mode_parallel = FALSE,   cluster = NULL,   seed = NULL,   xref = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_VIMC_Burden_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","text":"FOI_values Array values force infection due spillover sylvatic reservoir region + time point R0_values Array values basic reproduction number human-human transmission region time point input_data List population vaccination data multiple regions template Burden data VIMC format, regions, years, minimum maximum age, life expectancy line vaccine_efficacy Fractional vaccine efficacy time_inc Time increment days use model (either 1.0, 2.5 5.0 days) mode_start Flag indicating set initial population immunity level addition vaccination  mode_start = 0, vaccinated individuals  mode_start = 1, shift non-vaccinated individuals recovered give herd immunity (stratified age)  mode_start = 2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input (list datasets, one per region) mode_time Type time dependence FOI_spillover R0 used:  mode_time = 0, time variation (constant values) mode_time = 1, FOI/R0 vary annually without seasonality (number values = number years consider)  mode_time = 2, FOI/R0 vary monthly seasonality without inter-annual variation (number values = 12)  mode_time = 3, FOI/R0 vary daily seasonality without inter-annual variation (number values = 365/dt)  mode_time = 4, FOI/R0 vary annually monthly seasonality (number values = 12*number years consider)  mode_time = 5, FOI/R0 vary annually daily seasonality (number values = (365/dt)*number years consider) n_reps number stochastic repetitions deterministic TRUE/FALSE - set model run deterministic mode TRUE p_severe_inf Probability infection severe p_death_severe_inf Probability severe infection resulting death p_rep_severe Probability reporting severe non-fatal infection p_rep_death Probability reporting fatal infection YLD_per_case TBA mode_parallel TRUE/FALSE - set model run parallel using cluster TRUE cluster Cluster threads use mode_parallel = TRUE seed Optional random seed value set running region stochastic normalization; set NULL omit; work mode_parallel set FALSE. xref Region cross-referencing data generated template_region_xref() function; set NULL, calculated within  function '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Generate_VIMC_Burden_Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate_VIMC_Burden_Dataset — Generate_VIMC_Burden_Dataset","text":"function used generate annual burden data format used Vaccine Impact   Modelling Consortium (VIMC) [TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC — MCMC","title":"MCMC — MCMC","text":"Combined MCMC Multi-Region - series MCMC iterations one regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC — MCMC","text":"","code":"MCMC(   params_data = data.frame(name = \"FOI_var1\", initial = 1, max = Inf, min = -Inf, mean =     0, sd = 1, estimate = TRUE),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   filename_prefix = \"Chain\",   Niter = 1,   mode_start = 1,   time_inc = 1,   n_reps = 1,   enviro_data_const = list(),   enviro_data_var = list(),   deterministic = FALSE,   mode_time = 1,   mode_parallel = FALSE,   cluster = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC — MCMC","text":"params_data #Data frame parameter information containing names, initial values, maximum minimum values, mean standard deviation (prior calculation) flag indicating whether parameter estimated fixed Parameters include: coefficients environmental covariates calculate FOI_spillover R0, reported vaccination effectiveness, probability severe case reporting, probability fatal case reporting, Brazil FOI_spillover multiplier, FOI_spillover R0 (latter two never estimated, included priors) TBA - instructions input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives (TBA - instructions) obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths (TBA - instructions) filename_prefix Prefix output RDS file name, e.g. \"Chain.Rds\" Niter Total number iterations run mode_start Flag indicating set initial population immunity level addition vaccination  mode_start = 0, vaccinated individuals  mode_start = 1, shift non-vaccinated individuals recovered give herd immunity (stratified age)  mode_start = 2, use SEIRV input list previous run(s) time_inc time increment days (must 1 5) n_reps Number times repeat calculations get average likelihood iteration enviro_data_const Data frame values constant environmental covariates (columns) region (rows) enviro_data_var List containing time-varying environmental covariate data: regions: Vector region labels env_vars: Vector covariate names values: Array covariate values dimensions (number covariates, number regions, number time points). Number time points must correct mode_time setting. deterministic TRUE/FALSE - set model run deterministic mode TRUE mode_time Type time dependence FOI_spillover R0 used:  mode_time = 0, time variation (constant values) mode_time = 1, FOI/R0 vary annually without seasonality (number values = number years consider)  mode_time = 2, FOI/R0 vary monthly seasonality without inter-annual variation (number values = 12)  mode_time = 3, FOI/R0 vary daily seasonality without inter-annual variation (number values = 365/dt)  mode_time = 4, FOI/R0 vary annually monthly seasonality (number values = 12*number years consider)  mode_time = 5, FOI/R0 vary annually daily seasonality (number values = (365/dt)*number years consider) mode_parallel TRUE/FALSE - indicate whether use parallel processing supplied cluster speed cluster Cluster threads use mode_parallel = TRUE '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/MCMC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC — MCMC","text":"master function running Markov chain optimize parameters yellow fever model based calculated likelihood observing supplied data given particular set parameters.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Model_Run — Model_Run","title":"Model_Run — Model_Run","text":"Run SEIRV model single region","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model_Run — Model_Run","text":"","code":"Model_Run(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   years_data = c(1940:1941),   year0 = 1940,   vaccine_efficacy = 1,   time_inc = 1,   output_type = \"full\",   mode_start = 0,   start_SEIRV = list(),   mode_time = 0,   n_particles = 1,   n_threads = 1,   deterministic = FALSE )"},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model_Run — Model_Run","text":"FOI_spillover Vector values force infection due spillover sylvatic reservoir (size depends mode_time) R0 Vector values basic reproduction number urban spread infection (size depends mode_time) vacc_data Projected vaccination-based immunity (assuming vaccine_efficacy = 1) age group year pop_data Population age group year years_data Incremental vector years denoting years save data year0 First year population/vaccination data vaccine_efficacy Proportional vaccine efficacy time_inc Time increment days use model (1.0, 2.5 5.0 days) output_type Type data output:  \"full\" = SEIRVC + FOI steps ages  \"infs\" = annual total new infections (C) summed across ages  \"sero\" = annual SEIRV  \"infs_sero\" = annual SEIRVC, C summed across ages  \"infs_alt\" = annual total new infections combined age  \"infs_alt2\" = total new infections combined age steps mode_start Flag indicating set initial population immunity level addition vaccination  mode_start = 0, vaccinated individuals  mode_start = 1, shift non-vaccinated individuals recovered give herd immunity (stratified age)  mode_start = 2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input (mode_start = 2) mode_time Type time dependence FOI_spillover R0 used:  mode_time = 0, time variation (constant values) mode_time = 1, FOI/R0 vary annually without seasonality (number values = number years consider)  mode_time = 2, FOI/R0 vary monthly seasonality without inter - annual variation (number values = 12)  mode_time = 3, FOI/R0 vary daily seasonality without inter - annual variation (number values = 365/dt)  mode_time = 4, FOI/R0 vary annually monthly seasonality (number values = 12*number years consider)  mode_time = 5, FOI/R0 vary annually daily seasonality (number values = (365/dt)*number years consider) n_particles number particles use n_threads number threads use deterministic TRUE/FALSE  -  set model run deterministic mode TRUE '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model_Run — Model_Run","text":"Accepts epidemiological + population parameters model settings; runs SEIRV model one region specified time period number particles/threads outputs time-dependent SEIRV values, infection numbers /total force infection values. Run 20 particles (Model_Run_Many_Reps can used run larger numbers particles).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Many_Reps.html","id":null,"dir":"Reference","previous_headings":"","what":"Model_Run_Many_Reps — Model_Run_Many_Reps","title":"Model_Run_Many_Reps — Model_Run_Many_Reps","text":"Run SEIRV model single region large number repetitions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Many_Reps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model_Run_Many_Reps — Model_Run_Many_Reps","text":"","code":"Model_Run_Many_Reps(   FOI_spillover = 0,   R0 = 1,   vacc_data = list(),   pop_data = list(),   years_data = c(1940:1941),   year0 = 1940,   vaccine_efficacy = 1,   time_inc = 1,   output_type = \"full\",   mode_start = 0,   start_SEIRV = list(),   mode_time = 0,   n_reps = 1,   division = 10,   deterministic = FALSE )"},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Many_Reps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model_Run_Many_Reps — Model_Run_Many_Reps","text":"FOI_spillover Vector values force infection due spillover sylvatic reservoir (size depends mode_time) R0 Vector values basic reproduction number urban spread infection (size depends mode_time) vacc_data Projected vaccination-based immunity (assuming vaccine_efficacy = 1) age group year pop_data Population age group year years_data Incremental vector years denoting years save data year0 First year population/vaccination data vaccine_efficacy Proportional vaccine efficacy time_inc Time increment days use model (1.0, 2.5 5.0 days)model (1.0, 2.5 5.0 days) output_type Type data output:  \"full\" = SEIRVC + FOI steps ages  \"infs\" = annual total new infections (C) summed across ages  \"sero\" = annual SEIRV  \"infs_sero\" = annual SEIRVC, C summed across ages  \"infs_alt\" = annual total new infections combined age  \"infs_alt2\" = total new infections combined age steps mode_start Flag indicating set initial population immunity level addition vaccination  mode_start = 0, vaccinated individuals  mode_start = 1, shift non-vaccinated individuals recovered give herd immunity (stratified age)  mode_start = 2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input (mode_start = 2) mode_time Type time dependence FOI_spillover R0 used:  mode_time = 0, time variation (constant values) mode_time = 1, FOI/R0 vary annually without seasonality (number values = number years consider)  mode_time = 2, FOI/R0 vary monthly seasonality without inter - annual variation (number values = 12)  mode_time = 3, FOI/R0 vary daily seasonality without inter - annual variation (number values = 365/dt)  mode_time = 4, FOI/R0 vary annually monthly seasonality (number values = 12*number years consider)  mode_time = 5, FOI/R0 vary annually daily seasonality (number values = (365/dt)*number years consider) n_reps Number repetitions (used set number particles threads) division Number particles/threads run one go (20) deterministic TRUE/FALSE  -  set model run deterministic mode TRUE '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/Model_Run_Many_Reps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model_Run_Many_Reps — Model_Run_Many_Reps","text":"Accepts epidemiological + population parameters model settings; runs SEIRV model one region specified time period number repetitions outputs time-dependent SEIRV values, infection numbers /total force infection values. Variation Model_Run() used running large number repetitions (>20).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"case_data_calculate — case_data_calculate","title":"case_data_calculate — case_data_calculate","text":"Calculate reported case data SEIRV model output","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"case_data_calculate — case_data_calculate","text":"","code":"case_data_calculate(   model_data = list(),   n_p = 1,   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   p_rep_severe = 1,   p_rep_death = 1,   output_type = \"annual\",   deterministic = FALSE )"},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"case_data_calculate — case_data_calculate","text":"model_data SEIRV output Model_Run similar functions n_p Particle select model_data p_severe_inf Probability infection severe p_death_severe_inf Probability severe infection resulting death p_rep_severe Probability reporting severe non-fatal infection p_rep_death Probability reporting fatal infection output_type Type output produce: \"annual\" - Total reported cases reported deaths year \"monthly\" - Total reported cases reported deaths year/month \"pts\" - Total reported cases reported deaths every time point, summed age groups \"full\" - Reported cases reported deaths every time point age group deterministic Indicates whether calculate results deterministically (TRUE) stochastically (FALSE) '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_calculate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"case_data_calculate — case_data_calculate","text":"[TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_calculate_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"case_data_calculate_multi — case_data_calculate_multi","title":"case_data_calculate_multi — case_data_calculate_multi","text":"Calculate reported case data SEIRV model output across multiple repetitions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_calculate_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"case_data_calculate_multi — case_data_calculate_multi","text":"","code":"case_data_calculate_multi(   model_data = list(),   p_severe_inf = 0.12,   p_death_severe_inf = 0.39,   p_rep_severe = 1,   p_rep_death = 1,   output_type = \"annual\",   deterministic = FALSE )"},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_calculate_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"case_data_calculate_multi — case_data_calculate_multi","text":"model_data SEIRV output Model_Run similar functions p_severe_inf Probability infection severe p_death_severe_inf Probability severe infection resulting death p_rep_severe Probability reporting severe non-fatal infection p_rep_death Probability reporting fatal infection output_type Type output produce: \"annual\" - Total reported cases reported deaths year \"pts\" - Total reported cases reported deaths every time point, summed age groups \"full\" - Reported cases reported deaths every time point age group deterministic Indicates whether calculate results deterministically (TRUE) stochastically (FALSE) '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_calculate_multi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"case_data_calculate_multi — case_data_calculate_multi","text":"[TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"case_data_compare — case_data_compare","title":"case_data_compare — case_data_compare","text":"Compare modelled observed case death data using negative binomial function","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"case_data_compare — case_data_compare","text":"","code":"case_data_compare(model_values, obs_values)"},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"case_data_compare — case_data_compare","text":"model_values Modelled reported case death values obs_values Observed template case death values '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/case_data_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"case_data_compare — case_data_compare","text":"Compares modelled data (dataset generation functions) reported cases deaths per year observed data, calculating logarithmiclikelihood observing latter given former, using negative binomial formula.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"create_input_data — create_input_data","title":"create_input_data — create_input_data","text":"Creates input data set correct format use functions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_input_data — create_input_data","text":"","code":"create_input_data(   vacc_data = list(),   pop_data = list(),   regions = c(),   years = c() )"},{"path":"https://mrc-ide.github.io/YEP/reference/create_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_input_data — create_input_data","text":"vacc_data Data frame containing vaccination coverage data region column 1, year column 2 coverage values age remaining columns pop_data Data frame containing population data region column 1, year column 2 population values age remaining columns regions Vector regions extract data vacc_data pop_data (alphabetical order) years Vector years extract data vacc_data pop_data '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/create_input_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create_input_data — create_input_data","text":"Takes vaccination population data data frames (columns age columns showing region   year row), extracts number age groups (verifying data frame),   extracts data specified regions years, creates list format used functions (vectors   region names, years age groups, 3-dimensional arrays vaccination population data).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/enviro_data_var_check.html","id":null,"dir":"Reference","previous_headings":"","what":"enviro_data_var_check — enviro_data_var_check","title":"enviro_data_var_check — enviro_data_var_check","text":"Check format variable environmental data","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/enviro_data_var_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enviro_data_var_check — enviro_data_var_check","text":"","code":"enviro_data_var_check(enviro_data_var)"},{"path":"https://mrc-ide.github.io/YEP/reference/enviro_data_var_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enviro_data_var_check — enviro_data_var_check","text":"enviro_data_var TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/enviro_data_var_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"enviro_data_var_check — enviro_data_var_check","text":"TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/enviro_data_var_truncate.html","id":null,"dir":"Reference","previous_headings":"","what":"enviro_data_var_truncate — enviro_data_var_truncate","title":"enviro_data_var_truncate — enviro_data_var_truncate","text":"Truncate variable environmental data shorter set regions /time points","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/enviro_data_var_truncate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enviro_data_var_truncate — enviro_data_var_truncate","text":"","code":"enviro_data_var_truncate(   enviro_data_var = list(),   regions_new = c(),   t_pts_new = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/enviro_data_var_truncate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enviro_data_var_truncate — enviro_data_var_truncate","text":"enviro_data_var TBA regions_new Vector regions (subset enviro_data_var$regions) t_pts_new TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/enviro_data_var_truncate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"enviro_data_var_truncate — enviro_data_var_truncate","text":"TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/epi_param_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"epi_param_calc — epi_param_calc","title":"epi_param_calc — epi_param_calc","text":"Calculate FOI_spillover R0 values environmental covariates coefficients","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/epi_param_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"epi_param_calc — epi_param_calc","text":"","code":"epi_param_calc(   coeffs_const = c(0),   coeffs_var = c(0),   enviro_data_const = data.frame(),   enviro_data_var = NULL )"},{"path":"https://mrc-ide.github.io/YEP/reference/epi_param_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"epi_param_calc — epi_param_calc","text":"coeffs_const Vector coefficients time-invariant covariates coeffs_var Vector coefficients time-varying covariates enviro_data_const Data frame time-invariant environmental covariate values, region labels first column one row per region enviro_data_var List containing data time-varying environmental covariates: [TBA] '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/epi_param_calc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"epi_param_calc — epi_param_calc","text":"Takes environmental covariate values one regions coefficients environmental covariates  calculates epidemiological parameter values via matrix multiplication. Environmental covariates may constant  time-varying; constant time-varying sets values supplied separate input variables, coefficients  constant time-varying covariates. function can accept [TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/imm_fraction_function.html","id":null,"dir":"Reference","previous_headings":"","what":"imm_fraction_function — imm_fraction_function","title":"imm_fraction_function — imm_fraction_function","text":"Function estimate notional FOI herd immunity based R0 population age distribution","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/imm_fraction_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"imm_fraction_function — imm_fraction_function","text":"","code":"imm_fraction_function(   log_lambda = -4,   R0 = 1,   ages = c(0:100),   pop_fraction = rep(1/101, 101) )"},{"path":"https://mrc-ide.github.io/YEP/reference/imm_fraction_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"imm_fraction_function — imm_fraction_function","text":"log_lambda Natural logarithm force infection R0 Basic reproduction number ages List age values pop_fraction Population age group proportion total '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/imm_fraction_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"imm_fraction_function — imm_fraction_function","text":"[TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_check.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_check — input_data_check","title":"input_data_check — input_data_check","text":"Check input data correctly formatted","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_check — input_data_check","text":"","code":"input_data_check(input_data = list())"},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_check — input_data_check","text":"input_data List population vaccination data multiple regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_check — input_data_check","text":"function takes list input data use functions checks correctly   formatted, including containing necessary elements years ages sequence","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_truncate.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data_truncate — input_data_truncate","title":"input_data_truncate — input_data_truncate","text":"Truncate input data list shorter set regions /years","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_truncate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data_truncate — input_data_truncate","text":"","code":"input_data_truncate(input_data = list(), regions_new = NULL, years_new = NULL)"},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_truncate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data_truncate — input_data_truncate","text":"input_data List population vaccination data multiple regions (created using create_input_data() function usually loaded RDS file) regions_new Vector regions (subset input_data$region_labels) years_new Vector years (subset input_data$years_labels)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/input_data_truncate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_data_truncate — input_data_truncate","text":"amends list population vaccination data used input functions,   cross-referencing seroprevalence /case data adding connection information. function usually loaded RDS file)   positives   deaths TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_checks — mcmc_checks","title":"mcmc_checks — mcmc_checks","text":"Perform checks parameter data","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_checks — mcmc_checks","text":"","code":"mcmc_checks(params_data = list(), covar_names = c(), check_initial = FALSE)"},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_checks — mcmc_checks","text":"params_data TBA covar_names TBA check_initial TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_checks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_checks — mcmc_checks","text":"function, called MCMC() mcmc_prelim_fit(), performs number checks parameter data ensure proper functionality. [TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_params_data_create.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_params_data_create — mcmc_params_data_create","title":"mcmc_params_data_create — mcmc_params_data_create","text":"Create data frame parameter data input MCMC() mcmc_prelim_fit()","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_params_data_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_params_data_create — mcmc_params_data_create","text":"","code":"mcmc_params_data_create(   covar_names = c(\"Var1\", \"Var2\"),   add_est_param_names = \"vaccine_efficacy\" )"},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_params_data_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_params_data_create — mcmc_params_data_create","text":"covar_names TBA add_est_param_names TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_params_data_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_params_data_create — mcmc_params_data_create","text":"TBA","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_prelim_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_prelim_fit — mcmc_prelim_fit","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"Test multiple sets parameters randomly drawn range maximum minimum values order find approximate values giving maximum posterior likelihood","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_prelim_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"","code":"mcmc_prelim_fit(   n_iterations = 1,   n_param_sets = 1,   n_bounds = 1,   params_data = list(),   input_data = list(),   obs_sero_data = list(),   obs_case_data = list(),   mode_start = 1,   time_inc = 1,   n_reps = 1,   enviro_data_const = list(),   enviro_data_var = list(),   deterministic = TRUE,   mode_time = 0,   mode_parallel = FALSE,   cluster = NULL,   plot_graphs = FALSE )"},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_prelim_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"n_iterations = Number times run adjust maximum/minimum n_param_sets = Number parameter sets run iteration n_bounds = Number parameter sets (highest likelihood values) take iteration create new maximum/minimum values params_data TBA input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file) obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths mode_start Flag indicating set initial population immunity level addition vaccination  mode_start = 0, vaccinated individuals  mode_start = 1, shift non-vaccinated individuals recovered give herd immunity (stratified age)  mode_start = 2, use SEIRV input list previous run(s) time_inc time increment days (must 1 5) n_reps Number repetitions enviro_data_const Data frame values constant environmental covariates (columns) region (rows) enviro_data_var List containing values time-varying environmental covariates (TBA) deterministic TRUE/FALSE - set model run deterministic mode TRUE mode_time TBA mode_parallel TRUE/FALSE - indicate whether use parallel processing supplied cluster speed cluster Cluster threads use mode_parallel = TRUE plot_graphs TRUE/FALSE - plot graphs evolving parameter space '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/mcmc_prelim_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mcmc_prelim_fit — mcmc_prelim_fit","text":"function used estimate model parameter values giving maximum posterior likelihood; primarily intended used generate initial parameter values Markov Chain Monte Carlo fitting (using mcmc() function).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_prop_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"param_prop_setup — param_prop_setup","title":"param_prop_setup — param_prop_setup","text":"Set proposed new log parameter values next iteration chain","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_prop_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"param_prop_setup — param_prop_setup","text":"","code":"param_prop_setup(log_params = c(), chain_cov = 1, adapt = 0)"},{"path":"https://mrc-ide.github.io/YEP/reference/param_prop_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"param_prop_setup — param_prop_setup","text":"log_params Previous log parameter values used input chain_cov Covariance calculated previous iterations chain adapt 0/1 flag indicating type covariance use proposition value (TBA) '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/param_prop_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"param_prop_setup — param_prop_setup","text":"Takes current values parameter set used Markov Chain Monte Carlo fitting proposes new values multivariate normal distribution existing values form mean standard deviation based chain covariance (flag \"adapt\" set 1) flat value based number parameters.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/parameter_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter setup — parameter_setup","title":"Parameter setup — parameter_setup","text":"Set parameters input model","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/parameter_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter setup — parameter_setup","text":"","code":"parameter_setup(   FOI_spillover = c(),   R0 = c(),   vacc_data = list(),   pop_data = list(),   years_data = c(),   year0 = 1940,   vaccine_efficacy = 1,   time_inc = 1,   mode_start = 0,   start_SEIRV = list(),   mode_time = 0 )"},{"path":"https://mrc-ide.github.io/YEP/reference/parameter_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter setup — parameter_setup","text":"FOI_spillover Vector values force infection due spillover sylvatic reservoir (size depends mode_time) R0 Vector values basic reproduction number urban spread infection (size depends mode_time) vacc_data Projected vaccination-based immunity (assuming vaccine_efficacy = 1) age group year pop_data Population age group year years_data Incremental vector years denoting years save data year0 First year population/vaccination data vaccine_efficacy Proportional vaccine efficacy time_inc Time increment days use model (1.0, 2.5 5.0 days) mode_start Flag indicating set initial population immunity level addition vaccination  mode_start = 0, vaccinated individuals  mode_start = 1, shift non-vaccinated individuals recovered give herd immunity (stratified age)  mode_start = 2, use SEIRV input list previous run(s) start_SEIRV SEIRV data end previous run use input mode_time Type time dependence FOI_spillover R0 used:   mode_time = 0, time variation (constant values)  mode_time = 1, FOI/R0 vary annually without seasonality (number values = number years consider)   mode_time = 2, FOI/R0 vary monthly seasonality without inter - annual variation (number values = 12)   mode_time = 3, FOI/R0 vary daily seasonality without inter - annual variation (number values = 365/dt)   mode_time = 4, FOI/R0 vary annually monthly seasonality (number values = 12*number years consider)   mode_time = 5, FOI/R0 vary annually daily seasonality (number values = (365/dt)*number years consider) '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/parameter_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter setup — parameter_setup","text":"Takes multiple inputs, outputs list use odin SEIRV model.","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/regions_breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"regions_breakdown — regions_breakdown","title":"regions_breakdown — regions_breakdown","text":"Break regions datasets get list unique regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/regions_breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"regions_breakdown — regions_breakdown","text":"","code":"regions_breakdown(region_labels = c())"},{"path":"https://mrc-ide.github.io/YEP/reference/regions_breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"regions_breakdown — regions_breakdown","text":"region_labels Vector region labels","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/regions_breakdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"regions_breakdown — regions_breakdown","text":"Takes vector region labels, potentially including labels contain one region (e.g.   labels countrywide data adm1 level regions one label separated comma) produces alphabetically   ordered list region labels, breaking comma-separated groups. example, supplying vector labels \"BRA.1_1,BRA.2_1,BRA.3_1\" return vector length 3   - c(\"BRA.1_1\",\"BRA.2_1\",\"BRA.3_1\").","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_calculate — sero_calculate","title":"sero_calculate — sero_calculate","text":"Calculate seroprevalence unvaccinated people modelled data one years one age range","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_calculate — sero_calculate","text":"","code":"sero_calculate(   age_min = 0,   age_max = 101,   years = NULL,   vc_factor = 0,   data = list(),   n_p = 1 )"},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_calculate — sero_calculate","text":"age_min = Minimum age age group age_max = Maximum age age group years = Years calculate average annual seroprevalence vc_factor = Proportion patients tested vaccine status unknown data = Output Basic_Model_Run Full_Model_Run n_p = Particle select data '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_calculate — sero_calculate","text":"Takes information minimum maximum ages desired range, year(s) calculate seroprevalence, factor representing proportion patients unknown vaccine status, SEIRV model output data, calculates seroprevalence unvaccinated people specified age range specified year(s).","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate2.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_calculate2 — sero_calculate2","title":"sero_calculate2 — sero_calculate2","text":"Calculate number \"samples\" number \"positives\" modelled data specified age range(s) year(s)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_calculate2 — sero_calculate2","text":"","code":"sero_calculate2(sero_data = list(), model_data = list(), n_p = 1)"},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_calculate2 — sero_calculate2","text":"sero_data Data frame containing years, minimum maximum ages, values vc_factor (proportion people vaccination status unknown) model_data SEIRV output Model_Run similar functions n_p Particle select model_data '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_calculate2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_calculate2 — sero_calculate2","text":"Takes information minimum maximum ages desired range(s), year(s) calculate number \"samples\" (people eligible testing) \"positives\" (people test positive), plus vc_factor (proportion people vaccination status unknown)","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_data_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"sero_data_compare — sero_data_compare","title":"sero_data_compare — sero_data_compare","text":"Take seroprevalence results dataset generation functions, compare comparison observed/template seroprevalence data calculate likelihood","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_data_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sero_data_compare — sero_data_compare","text":"","code":"sero_data_compare(model_sero_values = c(), obs_sero_data = list())"},{"path":"https://mrc-ide.github.io/YEP/reference/sero_data_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sero_data_compare — sero_data_compare","text":"model_sero_values Seroprevalence values dataset generation function (. positives/. samples) obs_sero_data Seroprevalence data comparison, year age group, format   . samples/. positives '","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/sero_data_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sero_data_compare — sero_data_compare","text":"[TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/single_posterior_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"single_posterior_calc — single_posterior_calc","title":"single_posterior_calc — single_posterior_calc","text":"Function calculates outputs posterior likelihood observing simulated data","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/single_posterior_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"single_posterior_calc — single_posterior_calc","text":"","code":"single_posterior_calc(   log_params_prop = c(),   input_data = list(),   obs_sero_data = NULL,   obs_case_data = NULL,   ... )"},{"path":"https://mrc-ide.github.io/YEP/reference/single_posterior_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"single_posterior_calc — single_posterior_calc","text":"log_params_prop Proposed values parameters estimated (natural logarithm actual parameters) input_data List population vaccination data multiple regions (created using data input creation code usually loaded RDS file), cross-reference tables added MCMC obs_sero_data Seroprevalence data comparison, region, year & age group, format . samples/. positives obs_case_data Annual reported case/death data comparison, region year, format . cases/. deaths ... = Constant parameters/flags/etc. loaded determined mcmc() mcmc_prelim_fit, including params_data, mode_start, time_inc, n_reps, enviro_data, add_est_param_names, deterministic, mode_time, mode_parallel, cluster, i_FOI_const, i_FOI_var, i_R0_const, i_R0_var, i_FOI_prior, i_R0_prior","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/single_posterior_calc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"single_posterior_calc — single_posterior_calc","text":"function calculates posterior likelihood observing set observations (across multiple regions data types) given proposed parameter set. [TBA]","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/template_region_xref.html","id":null,"dir":"Reference","previous_headings":"","what":"template_region_xref — template_region_xref","title":"template_region_xref — template_region_xref","text":"Cross-reference template data individual regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/template_region_xref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"template_region_xref — template_region_xref","text":"","code":"template_region_xref(template = list(), regions = c())"},{"path":"https://mrc-ide.github.io/YEP/reference/template_region_xref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"template_region_xref — template_region_xref","text":"template List containing one sets template data (serological data, case data burden data) regions Vector individual regions","code":""},{"path":"https://mrc-ide.github.io/YEP/reference/template_region_xref.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"template_region_xref — template_region_xref","text":"Examines template data (serological, case burden) compares vector region names order  check lines set template data require model data region(s). example,  line set serological data region given \"AGO.1_1,AGO.2_1,AGO.3_1\" compared vector  regions c(\"AGO.1_1\",\"AGO.2_1\",\"AGO.3_1\",...), line requires data regions 1, 2 3. function used generating dataset one templates; normally used functions  Generate_Dataset, Generate_VIMC_Burden_Dataset Generate_Multiple_Datasets. returns list containing [TBA].","code":""}]
